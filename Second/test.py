import yara
import os

def first_callback(data):
    if 'matches' in data:
        matches = data['matches']
        if isinstance(matches, list):  # Check if matches is a list
            for match in matches:
                print("=" * 20)
                print(f"Matched rule: {match.rule}")
                print(f"Matched strings: {match.strings}")

                if match.rule == 'my_first_rule':
                    if all(key in match.strings for key in ['upx0', 'upx1', 'test', 'MZ_test']):
                        print("The file matches my_first_rule criteria (UPX detected, contains 'notepad', starts with 'MZ').")
                    else:
                        print("The file does not match my_first_rule criteria.")

                if match.rule == 'second_rule':
                    if 'a' in match.strings:
                        print("The file contains KERNEL32.")
                    else:
                        print("The file does not contain KERNEL32.")
        else:
            print("No matches found.")  # Handle case when matches is not a list
    else:
        print("No matches found.")

def detecting_yara(file_path, rule_path):
    if not os.path.exists(file_path):
        print(f"Error: File not found - {file_path}")
        return False

    if not os.path.exists(rule_path):
        print(f"Error: Rule file not found - {rule_path}")
        return False

    try:
        rules = yara.compile(rule_path)
        matches = rules.match(file_path, callback=first_callback)
        if matches is not None:  # Check if matches is not None before returning True
            return True
        else:
            return False
    except Exception as e:
        print(f"Error: {e}")
        return False

if __name__ == "__main__":
    rule_path = "/home/kty1895/Desktop/my_first_rule.yar"
    file_path = "/home/kty1895/Desktop/Malicious Code sample/test_data/0a3447cae6da7e17736d1d4cf572d5b3981241fa7898a8bcdb0d70f3742e65f9.pdf"

    if detecting_yara(file_path, rule_path):
        print("YARA rule matching completed.")
    else:
        print("YARA rule matching failed.")