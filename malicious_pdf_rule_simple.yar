import "hash"

rule Malicious_PDF_Features
{
    meta:
        author = "Taeyang Kim"
        description = "Detects various suspicious features in PDF files"
        weight = 5
        
    strings:
        $magic = { 25 50 44 46 }
        $header = /%PDF-1\.(3|4|6)/
        $reg0 = /Creator\\(yen vaw\\)/
        $reg1 = /Title\\(who cis\\)/
        $reg2 = /Author\\(ser pes\\)/
        $create0 = /CreationDate \\(D:20101015142358\\)/
        $create1 = /CreationDate \\(2008312053854\\)/
        $producer0 = /Producer \(Scribus PDF Library/
        $producer1 = "Notepad"
        $attrib0 = /\/JavaScript/
        $attrib3 = /\/ASCIIHexDecode/
        $attrib4 = /\/ASCII85Decode/
        $action0 = /\/Action/
        $cond0 = "unescape"
        $nop = "9090 9090"
        
    condition:
        $magic at 0 and
        (
            all of ($reg0, $reg1, $reg2) or
            not $header or
            ($header and (1 of ($create0, $create1))) or
            (1 of ($producer0, $producer1)) or
            ((2 of ($attrib0, $attrib3, $attrib4)) or
            ($action0 and $cond0 and $nop))
        )
}

rule Detect_IP_Address
{
    meta:
        author = "Antonio S. <asanchez@plutec.net>"
        description = "Detects IP addresses in PDF files"
        
    strings:
        $ipv4 = /([0-9]{1,3}\.){3}[0-9]{1,3}/ wide ascii
        $ipv6 = /(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))/ wide ascii
        
    condition:
        any of them
}

rule Big_Numbers_Detection
{
    meta:
        author = "_pusher_"
        description = "Detects big numbers of various sizes in PDF files"
        date = "2016-07"
        
    strings:
        $c20 = /[0-9a-fA-F]{20}/ fullword ascii
        $c32 = /[0-9a-fA-F]{32}/ fullword wide ascii
        $c48 = /[0-9a-fA-F]{48}/ fullword wide ascii
        $c64 = /[0-9a-fA-F]{64}/ fullword wide ascii
        $c128 = /[0-9a-fA-F]{128}/ fullword wide ascii
        $c256 = /[0-9a-fA-F]{256}/ fullword wide ascii

    condition:
        any of ($c20, $c32, $c48, $c64, $c128, $c256)
}

rule Advapi_Hash_API
{
    meta:
        author = "_pusher_"
        description = "Detects advapi API functions in PDF files"
        date = "2016-07"
        
    strings:
        $advapi32 = "advapi32.dll" wide ascii nocase
        $CryptCreateHash = "CryptCreateHash" wide ascii
        $CryptHashData = "CryptHashData" wide ascii
        $CryptAcquireContext = "CryptAcquireContext" wide ascii
        
    condition:
        $advapi32 and ($CryptCreateHash and $CryptHashData and $CryptAcquireContext)
}
